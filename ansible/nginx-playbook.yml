---
include:
- project: "engineering/pipelinecli"
  file: "/templates/plugins/plugin-steps.yml"
  ref: latest

variables:
  METTA_APPLICATION: "springbootfossa"
  METTA_COMPONENT: "pythontestapps"
  SHIELD_TEAM: "springbootfossa"
  CARID: 9895
  LOB: "OSPO"
  FOSSA_API_KEY: "${FOSSA_API_KEY}"

stages:
- test-and-scan

# =========================================
# Django Hello - Test & FOSSA Scan
# =========================================
django-hello-test-and-scan:
  extends: .python-build-and-analyze-template
  stage: test-and-scan
  tags:
  - shield
  variables:
    DEBUG: "true"
    WORK_DIR: django_hello
    # Virtual environment settings
    PYTHON_VIRTUALENV: "venv_django"
    # Install dependencies from pyproject.toml (Poetry)
    PYTHON_USE_PYPROJECT_TOML: "true"
    PYTHON_USE_REQUIREMENTS_TXT: "false"
    PYTHON_INSTALL_DEV_DEPENDENCIES: "true"
    # Unit test configuration - Django uses unittest/pytest-django
    PYTHON_RUN_UNITTESTS: "true"
    PYTHON_TEST_FRAMEWORK: "pytest"
    PYTHON_TEST_DIRECTORY: "."
    PYTHON_TEST_PATTERN: "tests.py"
    # Django-specific pytest arguments
    PYTHON_UNITTEST_ARGS: "-v,--tb=short,polls/tests.py,cowsay/tests.py"
    # Build package configuration
    PYTHON_BUILD_PACKAGE: "true"
    PYTHON_BUILD_FRAMEWORK: "build"
    PYTHON_BUILD_TYPE: "sdist"
    # FOSSA Analysis enabled
    RUN_FOSSA_ANALYSIS: "true"

# =========================================
# FastAPI Hello - Test & FOSSA Scan
# =========================================
fastapi-hello-test-and-scan:
  extends: .python-build-and-analyze-template
  stage: test-and-scan
  tags:
  - shield
  needs:
  - django-hello-test-and-scan
  variables:
    DEBUG: "true"
    WORK_DIR: fastapi_hello
    # Virtual environment settings
    PYTHON_VIRTUALENV: "venv_fastapi"
    # Install dependencies from requirements.txt
    PYTHON_USE_PYPROJECT_TOML: "false"
    PYTHON_USE_REQUIREMENTS_TXT: "true"
    # Unit test configuration
    PYTHON_RUN_UNITTESTS: "true"
    PYTHON_TEST_FRAMEWORK: "pytest"
    PYTHON_TEST_DIRECTORY: "tests"
    PYTHON_TEST_PATTERN: "test_*.py"
    # FastAPI test arguments with coverage
    PYTHON_UNITTEST_ARGS: "-v,--tb=short,--cov=fastapi_hello_world,--cov-report=term-missing"
    # Build package configuration
    PYTHON_BUILD_PACKAGE: "true"
    PYTHON_BUILD_FRAMEWORK: "build"
    PYTHON_BUILD_TYPE: "sdist"
    # FOSSA Analysis enabled
    RUN_FOSSA_ANALYSIS: "true"

# =========================================
# Flask Hello - Test & FOSSA Scan
# =========================================
flask-hello-test-and-scan:
  extends: .python-build-and-analyze-template
  stage: test-and-scan
  tags:
  - shield
  needs:
  - fastapi-hello-test-and-scan
  variables:
    DEBUG: "true"
    WORK_DIR: flask_hello
    # Virtual environment settings
    PYTHON_VIRTUALENV: "venv_flask"
    # Install dependencies from requirements.txt
    PYTHON_USE_PYPROJECT_TOML: "false"
    PYTHON_USE_REQUIREMENTS_TXT: "true"
    # Unit test configuration
    PYTHON_RUN_UNITTESTS: "true"
    PYTHON_TEST_FRAMEWORK: "pytest"
    PYTHON_TEST_DIRECTORY: "tests"
    PYTHON_TEST_PATTERN: "test_*.py"
    # Flask test arguments with coverage
    PYTHON_UNITTEST_ARGS: "-v,--tb=short,--cov=flask_hello_world,--cov-report=term-missing"
    # Build package configuration
    PYTHON_BUILD_PACKAGE: "true"
    PYTHON_BUILD_FRAMEWORK: "build"
    PYTHON_BUILD_TYPE: "sdist"
    # FOSSA Analysis enabled
    RUN_FOSSA_ANALYSIS: "true"

# =========================================
# Python Conda Hello - Test & FOSSA Scan
# =========================================
python-conda-hello-test-and-scan:
  extends: .python-build-and-analyze-template
  stage: test-and-scan
  tags:
  - shield
  needs:
  - flask-hello-test-and-scan
  variables:
    DEBUG: "true"
    WORK_DIR: python_conda_hello
    # Virtual environment settings
    PYTHON_VIRTUALENV: "venv_conda"
    # Install dependencies from requirements.txt
    PYTHON_USE_PYPROJECT_TOML: "false"
    PYTHON_USE_REQUIREMENTS_TXT: "true"
    # Unit test configuration
    PYTHON_RUN_UNITTESTS: "true"
    PYTHON_TEST_FRAMEWORK: "pytest"
    PYTHON_TEST_DIRECTORY: "tests"
    PYTHON_TEST_PATTERN: "test_*.py"
    # Additional pytest arguments for better output
    PYTHON_UNITTEST_ARGS: "-v,--tb=short,--cov=hello_world,--cov-report=term-missing"
    # Build package configuration
    PYTHON_BUILD_PACKAGE: "true"
    PYTHON_BUILD_FRAMEWORK: "build"
    PYTHON_BUILD_TYPE: "sdist"
    # FOSSA Analysis enabled
    RUN_FOSSA_ANALYSIS: "true"

# =========================================
# Python Pipenv Hello - Test & FOSSA Scan
# =========================================
python-pipenv-hello-test-and-scan:
  extends: .python-build-and-analyze-template
  stage: test-and-scan
  tags:
  - shield
  needs:
  - python-conda-hello-test-and-scan
  variables:
    DEBUG: "true"
    WORK_DIR: python_pipenv_hello
    # Virtual environment settings
    PYTHON_VIRTUALENV: "venv_pipenv"
    # Install dependencies from requirements.txt
    PYTHON_USE_PYPROJECT_TOML: "false"
    PYTHON_USE_REQUIREMENTS_TXT: "true"
    # Unit test configuration
    PYTHON_RUN_UNITTESTS: "true"
    PYTHON_TEST_FRAMEWORK: "pytest"
    PYTHON_TEST_DIRECTORY: "tests"
    PYTHON_TEST_PATTERN: "test_*.py"
    # Additional pytest arguments for better output
    PYTHON_UNITTEST_ARGS: "-v,--tb=short,--cov=hello_world,--cov-report=term-missing"
    # Build package configuration
    PYTHON_BUILD_PACKAGE: "true"
    PYTHON_BUILD_FRAMEWORK: "build"
    PYTHON_BUILD_TYPE: "sdist"
    # FOSSA Analysis enabled
    RUN_FOSSA_ANALYSIS: "true"
